{"version":3,"sources":["components/Pokemon.js","components/PokemonList.js","components/Pokemons.js","components/About.js","components/PokemonDetails.js","components/Header.js","components/Nav.js","App.js","index.js"],"names":["Pokemon","props","className","style","maxWidth","pokemon","name","types","map","value","index","type","to","id","src","sprites","alt","PokemonList","data","key","Pokemons","pokemonDetails","onSelect","selectedList","_filterFunction","onRemove","length","setState","displayList","filteredList","filter","some","f","pkType","state","pokemons","pokemonType","loading","this","getPokemon","getPoketype","axios","get","then","response","results","catch","error","console","log","url","temp","push","result","slice","sort","a","b","options","selectedValues","selectedValue","displayValue","Component","About","PokemonDetails","poke","fetchPoketype","params","match","height","weight","Header","Nav","navStyle","color","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.43fb8f4f.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n//RENDER EACH OF THE POKEMON DETAILS\n\nconst Pokemon = (props) => (\n  <div className=\"card text-center mx-auto\" style={{ maxWidth: \"18rem\" }}>\n    <div className=\"card-header\">\n      <b>Name: {props.pokemon.name}</b>\n    </div>\n    <br />\n\n    <div>\n      <h6 className=\"card-subtitle mb-2 text-muted\">\n        Type:\n        {props.pokemon.types.map((value, index) => {\n          return value.type.name + \",\";\n        })}\n      </h6>\n\n      <Link to={`/pokemon/${props.pokemon.id}`}>\n        <img src={props.pokemon.sprites[\"front_default\"]} alt=\"\" />\n      </Link>\n    </div>\n  </div>\n);\n\nexport default Pokemon;\n","import React from \"react\";\nimport Pokemon from \"./Pokemon\";\n\n//RENDER THE POKEMONS RETURNED FROM THE POKEMON API\n\nconst PokemonList = (props) => {\n  const results = props.data;\n  let pokemon = results.map((pokemon) => (\n    <Pokemon pokemon={pokemon} key={pokemon.id} />\n  ));\n\n  return (\n    <div className=\"container\">\n      <div className=\"card-columns\">{pokemon}</div>\n    </div>\n  );\n};\n\nexport default PokemonList;\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Multiselect } from \"multiselect-react-dropdown\";\r\nimport PokemanList from \"./PokemonList\";\r\n\r\nclass Pokemons extends Component {\r\n  pokemonDetails = [];\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      pokemons: [],\r\n      pokemonType: [],\r\n      displayList: [],\r\n      loading: true,\r\n    };\r\n  }\r\n  //SETTING ALL DATA FETCHING INSIDE REACT ComponentDidMount LIFECYCLE\r\n\r\n  componentDidMount() {\r\n    this.getPokemon();\r\n    this.getPoketype();\r\n  }\r\n\r\n  //FETCHES THE DIFFERENT TYPES OF POKEMON\r\n\r\n  getPoketype() {\r\n    axios\r\n      .get(\"https://pokeapi.co/api/v2/type\")\r\n      .then((response) => {\r\n        this.setState({ pokemonType: response.data.results });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error fetching and parsing data\", error);\r\n      });\r\n  }\r\n\r\n  //FETCHES THE FIRST 150 POKEMON\r\n\r\n  getPokemon() {\r\n    axios\r\n      .get(\"https://pokeapi.co/api/v2/pokemon?limit=150\")\r\n      .then((response) => {\r\n        this.setState({ pokemons: response.data.results });\r\n\r\n        // eslint-disable-next-line array-callback-return\r\n        this.state.pokemons.map((pokemon) => {\r\n          axios\r\n            .get(pokemon.url)\r\n            .then((response) => {\r\n              var temp = this.pokemonDetails;\r\n              //console.log(temp);\r\n              temp.push(response.data);\r\n              let result = temp.slice(0);\r\n              result.sort((a, b) => {\r\n                return a.id - b.id;\r\n              });\r\n              this.setState({ displayList: result, loading: false });\r\n            })\r\n            .catch((error) => {\r\n              console.log(\"Error fetching and parsing data\", error);\r\n            });\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error fetching and parsing data\", error);\r\n      });\r\n  }\r\n\r\n  //HANDLES THE OnSelect EVENT\r\n\r\n  onSelect = (selectedList) => {\r\n    this._filterFunction(selectedList);\r\n  };\r\n\r\n  //HANDLES THE onRemove EVENT\r\n\r\n  onRemove = (selectedList) => {\r\n    if (selectedList.length > 0) {\r\n      this._filterFunction(selectedList);\r\n    } else {\r\n      this.setState({ displayList: this.pokemonDetails });\r\n    }\r\n  };\r\n\r\n  //THIS FUNCTION  HANDLES THE FILTERING LOGIC\r\n\r\n  _filterFunction = (selectedList) => {\r\n    let filteredList = [];\r\n    filteredList = this.pokemonDetails.filter((pokemon) => {\r\n      return selectedList.some((f) => {\r\n        return pokemon.types.some((pkType) => {\r\n          return f.name === pkType.type.name;\r\n        });\r\n      });\r\n    });\r\n\r\n    this.setState({ displayList: filteredList });\r\n  };\r\n\r\n  render() {\r\n    const { loading, displayList } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <Multiselect\r\n          options={this.state.pokemonType}\r\n          selectedValues={this.state.selectedValue}\r\n          onSelect={this.onSelect}\r\n          onRemove={this.onRemove}\r\n          displayValue=\"name\"\r\n        />\r\n        <br />\r\n        <div>\r\n          {loading ? (\r\n            <p>Fetching pokemons.....</p>\r\n          ) : (\r\n            <PokemanList data={displayList} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pokemons;\r\n","import React from \"react\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div className=\"card text-center\">\r\n      <div className=\"card-body\">\r\n        <p>\r\n          Poke gallery is a react application that fetches Pokemon from the poke\r\n          API\r\n        </p>\r\n        <p>It renders the first 150 Pokemon and displays their details</p>\r\n        <p>The Pokemons can be filter by multiple types</p>\r\n        <p>\r\n          To view more information about each Pokemon click on the Pokemon Image\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass PokemonDetails extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      poke: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchPoketype();\r\n  }\r\n\r\n  fetchPoketype() {\r\n    const {\r\n      match: { params },\r\n    } = this.props;\r\n\r\n    axios\r\n      .get(`https://pokeapi.co/api/v2/pokemon/${params.id}`)\r\n      .then((response) => {\r\n        //console.log(response);\r\n\r\n        this.setState({ poke: response.data });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error fetching and parsing data\", error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { poke } = this.state;\r\n    return (\r\n      <div className=\"card text-center\">\r\n        <div className=\"card-body\">\r\n          <h1>Name : {poke.name}</h1>\r\n          <h1>ID : {poke.id}</h1>\r\n          <h1>Height : {poke.height}</h1>\r\n          <h1>Weight : {poke.weight}</h1>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PokemonDetails;\r\n","import React from \"react\";\n\n//RENDERS A TITLE FOR THE PAGE\nconst Header = () => {\n  return (\n    <div className=\"Title\">\n      <center>\n        <h2>Poke Gallery</h2>\n      </center>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Nav = () => {\r\n  const navStyle = {\r\n    color: \"white\",\r\n  };\r\n  return (\r\n    <div>\r\n      <nav>\r\n        <Header />\r\n        <ul className=\"nav-links\">\r\n          <Link style={navStyle} to=\"/\">\r\n            <li>About</li>\r\n          </Link>\r\n          <Link style={navStyle} to=\"/pokemon\">\r\n            <li>Pokemons</li>\r\n          </Link>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React from \"react\";\nimport Pokemons from \"./components/Pokemons\";\nimport \"./App.css\";\nimport About from \"./components/About\";\nimport pokemonDetails from \"./components/PokemonDetails\";\nimport Nav from \"./components/Nav\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n//Ability to handle route in react BrowserRoute\n//Render the component based on the url\n//exact make sure the exact route is render. If there is no exact as soon as the route match a path it stop but exact ensures that it the right path.\n//switch make sure that as soon as the exact url is found it stops and render the component\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Nav />\n        <Switch>\n          <Route path=\"/\" exact component={About} />\n          <Route path=\"/pokemon\" exact component={Pokemons} />\n          <Route path=\"/pokemon/:id\" exact component={pokemonDetails} />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}