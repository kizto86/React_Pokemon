{"version":3,"sources":["components/Header.js","components/Pokemon.js","components/PokemonList.js","App.js","index.js"],"names":["Header","className","Pokemon","props","style","maxWidth","pokemon","name","id","types","map","value","index","type","src","sprites","alt","PokemonList","data","key","App","pokemonDetails","onSelect","selectedList","_filterFunction","onRemove","length","setState","displayList","filteredList","filter","some","f","pkType","state","pokemons","pokemonType","this","getPokemon","getPoketype","axios","get","then","response","results","catch","error","console","log","url","temp","push","result","slice","sort","a","b","options","selectedValues","selectedValue","displayValue","Component","ReactDOM","render","document","getElementById"],"mappings":"0PAaeA,G,MAVA,WACb,OACE,yBAAKC,UAAU,SACb,gCACE,uD,wBCoBOC,EAvBC,SAACC,GAAD,OACd,yBAAKF,UAAU,2BAA2BG,MAAO,CAAEC,SAAU,UAC3D,yBAAKJ,UAAU,eACb,oCAAUE,EAAMG,QAAQC,OAE1B,yBAAKN,UAAU,aACb,wBAAIA,UAAU,iCAAd,WACWE,EAAMG,QAAQE,KAG3B,6BACE,wBAAIP,UAAU,iCAAd,QAEGE,EAAMG,QAAQG,MAAMC,KAAI,SAACC,EAAOC,GAC/B,OAAOD,EAAME,KAAKN,KAAO,QAI7B,yBAAKO,IAAKX,EAAMG,QAAQS,QAAd,cAAwCC,IAAI,QCJ7CC,EAbK,SAACd,GACnB,IACIG,EADYH,EAAMe,KACAR,KAAI,SAACJ,GAAD,OACxB,kBAAC,EAAD,CAASA,QAASA,EAASa,IAAKb,EAAQE,QAG1C,OACE,yBAAKP,UAAU,aACb,yBAAKA,UAAU,gBAAgBK,KC2GtBc,E,kDA9Gb,aAAe,IAAD,8BACZ,gBAHFC,eAAiB,GAEH,EA6DdC,SAAW,SAACC,GACV,EAAKC,gBAAgBD,IA9DT,EAmEdE,SAAW,SAACF,GACNA,EAAaG,OAAS,EACxB,EAAKF,gBAAgBD,GAErB,EAAKI,SAAS,CAAEC,YAAa,EAAKP,kBAvExB,EA6EdG,gBAAkB,SAACD,GACjB,IAAIM,EACJA,EAAe,EAAKR,eAAeS,QAAO,SAACxB,GACzC,OAAOiB,EAAaQ,MAAK,SAACC,GACxB,OAAO1B,EAAQG,MAAMsB,MAAK,SAACE,GACzB,OAAOD,EAAEzB,OAAS0B,EAAOpB,KAAKN,cAKpC,EAAKoB,SAAS,CAAEC,YAAaC,KArF7B,EAAKK,MAAQ,CACXC,SAAU,GACVC,YAAa,GACbR,YAAa,IALH,E,gEAWZS,KAAKC,aACLD,KAAKE,gB,oCAKQ,IAAD,OACZC,IACGC,IAAI,kCACJC,MAAK,SAACC,GACL,EAAKhB,SAAS,CAAES,YAAaO,EAASzB,KAAK0B,aAE5CC,OAAM,SAACC,GACNC,QAAQC,IAAI,kCAAmCF,Q,mCAMvC,IAAD,OACXN,IACGC,IAAI,+CACJC,MAAK,SAACC,GACL,EAAKhB,SAAS,CAAEQ,SAAUQ,EAASzB,KAAK0B,UAGxC,EAAKV,MAAMC,SAASzB,KAAI,SAACJ,GACvBkC,IACGC,IAAInC,EAAQ2C,KACZP,MAAK,SAACC,GACL,IAAIO,EAAO,EAAK7B,eAChB6B,EAAKC,KAAKR,EAASzB,MACnB,IAAIkC,EAASF,EAAKG,MAAM,GACxBD,EAAOE,MAAK,SAACC,EAAGC,GACd,OAAOD,EAAE/C,GAAKgD,EAAEhD,MAElB,EAAKmB,SAAS,CAAEC,YAAawB,OAE9BP,OAAM,SAACC,GACNC,QAAQC,IAAI,kCAAmCF,YAItDD,OAAM,SAACC,GACNC,QAAQC,IAAI,kCAAmCF,Q,+BAoCnD,OACE,yBAAK7C,UAAU,aACb,kBAAC,EAAD,MAEA,kBAAC,cAAD,CACEwD,QAASpB,KAAKH,MAAME,YACpBsB,eAAgBrB,KAAKH,MAAMyB,cAC3BrC,SAAUe,KAAKf,SACfG,SAAUY,KAAKZ,SACfmC,aAAa,SAEf,6BAEA,kBAAC,EAAD,CAAa1C,KAAMmB,KAAKH,MAAMN,mB,GA3GpBiC,aCHlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.5a4daa7c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n//RENDERS A TITLE FOR THE PAGE\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"Title\">\r\n      <center>\r\n        <h2>A Pokemon React APP</h2>\r\n      </center>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\n//RENDER EACH OF THE POKEMON DETAILS\r\n\r\nconst Pokemon = (props) => (\r\n  <div className=\"card text-center mx-auto\" style={{ maxWidth: \"18rem\" }}>\r\n    <div className=\"card-header\">\r\n      <b>Name: {props.pokemon.name}</b>\r\n    </div>\r\n    <div className=\"card-body\">\r\n      <h6 className=\"card-subtitle mb-2 text-muted\">\r\n        Number: {props.pokemon.id}\r\n      </h6>\r\n    </div>\r\n    <div>\r\n      <h6 className=\"card-subtitle mb-2 text-muted\">\r\n        Type:\r\n        {props.pokemon.types.map((value, index) => {\r\n          return value.type.name + \",\";\r\n        })}\r\n      </h6>\r\n\r\n      <img src={props.pokemon.sprites[\"front_default\"]} alt=\"\" />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Pokemon;\r\n","import React from \"react\";\r\nimport Pokemon from \"./Pokemon\";\r\n\r\n//RENDER THE POKEMONS RETURNED FROM THE POKEMON API\r\n\r\nconst PokemonList = (props) => {\r\n  const results = props.data;\r\n  let pokemon = results.map((pokemon) => (\r\n    <Pokemon pokemon={pokemon} key={pokemon.id} />\r\n  ));\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"card-columns\">{pokemon}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonList;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport axios from \"axios\";\nimport { Multiselect } from \"multiselect-react-dropdown\";\nimport PokemanList from \"./components/PokemonList\";\n\nclass App extends Component {\n  pokemonDetails = [];\n\n  constructor() {\n    super();\n    this.state = {\n      pokemons: [],\n      pokemonType: [],\n      displayList: [],\n    };\n  }\n  //SETTING ALL DATA FETCHING INSIDE REACT ComponentDidMount LIFECYCLE\n\n  componentDidMount() {\n    this.getPokemon();\n    this.getPoketype();\n  }\n\n  //FETCHES THE DIFFERENT TYPES OF POKEMON\n\n  getPoketype() {\n    axios\n      .get(\"https://pokeapi.co/api/v2/type\")\n      .then((response) => {\n        this.setState({ pokemonType: response.data.results });\n      })\n      .catch((error) => {\n        console.log(\"Error fetching and parsing data\", error);\n      });\n  }\n\n  //FETCHES THE FIRST 150 POKEMON\n\n  getPokemon() {\n    axios\n      .get(\"https://pokeapi.co/api/v2/pokemon?limit=150\")\n      .then((response) => {\n        this.setState({ pokemons: response.data.results });\n\n        // eslint-disable-next-line array-callback-return\n        this.state.pokemons.map((pokemon) => {\n          axios\n            .get(pokemon.url)\n            .then((response) => {\n              var temp = this.pokemonDetails;\n              temp.push(response.data);\n              let result = temp.slice(0);\n              result.sort((a, b) => {\n                return a.id - b.id;\n              });\n              this.setState({ displayList: result });\n            })\n            .catch((error) => {\n              console.log(\"Error fetching and parsing data\", error);\n            });\n        });\n      })\n      .catch((error) => {\n        console.log(\"Error fetching and parsing data\", error);\n      });\n  }\n\n  //HANDLES THE OnRemove EVENT\n\n  onSelect = (selectedList) => {\n    this._filterFunction(selectedList);\n  };\n\n  //HANDLES THE onRemove EVENT\n\n  onRemove = (selectedList) => {\n    if (selectedList.length > 0) {\n      this._filterFunction(selectedList);\n    } else {\n      this.setState({ displayList: this.pokemonDetails });\n    }\n  };\n\n  //THIS FUNCTION  HANDLES THE FILTERING LOGIC\n\n  _filterFunction = (selectedList) => {\n    let filteredList = [];\n    filteredList = this.pokemonDetails.filter((pokemon) => {\n      return selectedList.some((f) => {\n        return pokemon.types.some((pkType) => {\n          return f.name === pkType.type.name;\n        });\n      });\n    });\n\n    this.setState({ displayList: filteredList });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Header />\n\n        <Multiselect\n          options={this.state.pokemonType}\n          selectedValues={this.state.selectedValue}\n          onSelect={this.onSelect}\n          onRemove={this.onRemove}\n          displayValue=\"name\"\n        />\n        <br />\n\n        <PokemanList data={this.state.displayList} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}