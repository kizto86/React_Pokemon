{"version":3,"sources":["components/Pokemon.js","components/PokemonList.js","components/Pokemons.js","components/About.js","components/PokemonDetails.js","components/Header.js","components/Nav.js","App.js","index.js"],"names":["Pokemon","props","className","style","maxWidth","pokemon","name","types","map","value","index","type","to","id","src","sprites","alt","PokemonList","pokemonList","data","key","Pokemons","pokemonDetails","getPokemon","a","axios","get","response","pokemons","results","pkmList","_asyncForEach","url","result","push","this","sort","b","setState","displayList","loading","array","callback","length","onSelect","selectedList","_filterFunction","onRemove","filteredList","filter","some","f","pkType","state","pokemonType","getPoketype","then","catch","error","console","log","options","selectedValues","selectedValue","displayValue","Component","About","PokemonDetails","poke","fetchPoketype","params","match","height","weight","Header","Nav","navStyle","color","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.712c0d79.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n/*renders each of the pokemon details and also create \na link on the image tag that navigate to the pokemon detail pages when clicked*/\n\nconst Pokemon = (props) => (\n  <div className=\"card text-center mx-auto\" style={{ maxWidth: \"18rem\" }}>\n    <div className=\"card-header\">\n      <b>Name: {props.pokemon.name}</b>\n    </div>\n    <br />\n\n    <div>\n      <h6 className=\"card-subtitle mb-2 text-muted\">\n        Type:\n        {props.pokemon.types.map((value, index) => {\n          return value.type.name + \",\";\n        })}\n      </h6>\n\n      <Link to={`/pokemon/${props.pokemon.id}`}>\n        <img src={props.pokemon.sprites[\"front_default\"]} alt=\"\" />\n      </Link>\n    </div>\n  </div>\n);\n\nexport default Pokemon;\n","import React from \"react\";\nimport Pokemon from \"./Pokemon\";\n\n//render the pokemons returned from the pokemon API\n\nconst PokemonList = (props) => {\n  const results = props.data;\n\n  let pokemonList = results.map((pokemon) => (\n    <Pokemon pokemon={pokemon} key={pokemon.id} />\n  ));\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        {pokemonList.map((value, index) => {\n          return (\n            <div className=\"col-sm-12 col-md-4 mb-5\" key={index}>\n              {value}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default PokemonList;\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Multiselect } from \"multiselect-react-dropdown\";\r\nimport PokemonList from \"./PokemonList\";\r\n\r\nclass Pokemons extends Component {\r\n  pokemonDetails = [];\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      pokemons: [],\r\n      pokemonType: [],\r\n      displayList: [],\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  //setting all data fetching inside react componentDidMount lifecycle\r\n\r\n  componentDidMount() {\r\n    this.getPokemon();\r\n    this.getPoketype();\r\n  }\r\n\r\n  //fetches the different types of pokemon\r\n\r\n  getPoketype() {\r\n    axios\r\n      .get(\"https://pokeapi.co/api/v2/type\")\r\n      .then((response) => {\r\n        this.setState({ pokemonType: response.data.results });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error fetching and parsing data\", error);\r\n      });\r\n  }\r\n\r\n  //fetches the first 150 pokemons\r\n\r\n  getPokemon = async () => {\r\n    let response = await axios.get(\r\n      \"https://pokeapi.co/api/v2/pokemon?limit=150\"\r\n    );\r\n\r\n    let pokemons = response.data.results;\r\n    let pkmList = [];\r\n    await this._asyncForEach(pokemons, async (pokemon) => {\r\n      let result = await axios.get(pokemon.url);\r\n      pkmList.push(result.data);\r\n    });\r\n\r\n    pkmList.sort((a, b) => {\r\n      return a.id - b.id;\r\n    });\r\n\r\n    this.pokemonDetails = pkmList;\r\n    this.setState({ displayList: pkmList, loading: false });\r\n  };\r\n\r\n  _asyncForEach = async (array, callback) => {\r\n    for (let index = 0; index < array.length; index++) {\r\n      await callback(array[index], index, array);\r\n    }\r\n  };\r\n\r\n  //handles the  OnSelect event\r\n\r\n  onSelect = (selectedList) => {\r\n    this._filterFunction(selectedList);\r\n  };\r\n\r\n  //handles the OnRemove event\r\n\r\n  onRemove = (selectedList) => {\r\n    if (selectedList.length > 0) {\r\n      this._filterFunction(selectedList);\r\n    } else {\r\n      this.setState({ displayList: this.pokemonDetails });\r\n    }\r\n  };\r\n\r\n  //handles the filtering logic\r\n\r\n  _filterFunction = (selectedList) => {\r\n    let filteredList = [];\r\n    filteredList = this.pokemonDetails.filter((pokemon) => {\r\n      return selectedList.some((f) => {\r\n        return pokemon.types.some((pkType) => {\r\n          return f.name === pkType.type.name;\r\n        });\r\n      });\r\n    });\r\n\r\n    this.setState({ displayList: filteredList });\r\n  };\r\n\r\n  render() {\r\n    const { loading, displayList } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <Multiselect\r\n          options={this.state.pokemonType}\r\n          selectedValues={this.state.selectedValue}\r\n          onSelect={this.onSelect}\r\n          onRemove={this.onRemove}\r\n          displayValue=\"name\"\r\n        />\r\n        <br />\r\n        <div>\r\n          {loading ? (\r\n            <p>Fetching pokemons.....</p>\r\n          ) : (\r\n            <PokemonList data={displayList} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pokemons;\r\n","import React from \"react\";\r\n// renders the about page\r\nconst About = () => {\r\n  return (\r\n    <div className=\"card text-center\">\r\n      <div className=\"card-body\">\r\n        <p>\r\n          Poke gallery is a react application that fetches Pokemon from the poke\r\n          API\r\n        </p>\r\n        <p>It renders the first 150 Pokemon and displays their details</p>\r\n        <p>The Pokemons can be filter by multiple types</p>\r\n        <p>\r\n          To view more information about each Pokemon click on the Pokemon Image\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n//Creating a detail pages for each pokemon\r\nclass PokemonDetails extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      poke: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchPoketype();\r\n  }\r\n\r\n  //fetches a particular  pokemon details based on the id passed as  params\r\n  fetchPoketype() {\r\n    const {\r\n      match: { params },\r\n    } = this.props;\r\n\r\n    axios\r\n      .get(`https://pokeapi.co/api/v2/pokemon/${params.id}`)\r\n      .then((response) => {\r\n        this.setState({ poke: response.data });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error fetching and parsing data\", error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { poke } = this.state;\r\n    return (\r\n      <div className=\"card text-center\">\r\n        <div className=\"card-body\">\r\n          <h1>Name : {poke.name}</h1>\r\n          <h1>ID : {poke.id}</h1>\r\n          <h1>Height : {poke.height}</h1>\r\n          <h1>Weight : {poke.weight}</h1>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PokemonDetails;\r\n","import React from \"react\";\n\n//renders a title for the page\nconst Header = () => {\n  return (\n    <div className=\"Title\">\n      <center>\n        <h2>Poke Gallery</h2>\n      </center>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Nav = () => {\r\n  const navStyle = {\r\n    color: \"white\",\r\n  };\r\n  return (\r\n    <div>\r\n      <nav>\r\n        <Header />\r\n        <ul className=\"nav-links\">\r\n          <Link style={navStyle} to=\"/\">\r\n            <li>About</li>\r\n          </Link>\r\n          <Link style={navStyle} to=\"/pokemon\">\r\n            <li>Pokemons</li>\r\n          </Link>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React from \"react\";\nimport Pokemons from \"./components/Pokemons\";\nimport \"./App.css\";\nimport About from \"./components/About\";\nimport pokemonDetails from \"./components/PokemonDetails\";\nimport Nav from \"./components/Nav\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n//defining  routes and component to render on the routes\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Nav />\n        <Switch>\n          <Route path=\"/pokemon\" exact component={Pokemons} />\n          <Route path=\"/pokemon/:id\" exact component={pokemonDetails} />\n          <Route path=\"/\" component={About} />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}